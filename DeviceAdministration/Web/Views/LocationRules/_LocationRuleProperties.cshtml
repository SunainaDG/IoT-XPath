@using System.Web.Mvc.Html
@using Microsoft.Azure.Devices.Applications.RemoteMonitoring.DeviceAdmin.Web.Security
@using GlobalResources
@model Microsoft.Azure.Devices.Applications.RemoteMonitoring.DeviceAdmin.Web.Models.EditLocationRuleModel
<div class="header_grid header_grid_general">
    <h3 class="grid_subheadhead_detail">@Strings.RuleProperties</h3>
</div>
<section class="details_grid_general" id="ruleDetailsGrid">
    <h4 class="grid_subhead_detail_label">@Strings.RuleIdHeader</h4>
    <p class="grid_detail_value" name="ruleField_ruleId">@Model.RuleId</p>

    <h4 class="grid_subhead_detail_label">@Strings.VerticalThreshold</h4>
    <p class="grid_detail_value" name="ruleField_VerticalThreshold">@Model.VerticalThreshold</p>

    <h4 class="grid_subhead_detail_label">@Strings.LateralThreshold</h4>
    <p class="grid_detail_value" name="ruleField_LateralThreshold">@Model.LateralThreshold</p>

    <h4 class="grid_subhead_detail_label">@Strings.ForwardThreshold</h4>
    <p class="grid_detail_value" name="ruleField_ForwardThreshold">@Model.ForwardThreshold</p>

    <h4 class="grid_subhead_detail_label">@Strings.RuleOutput</h4>
    <p class="grid_detail_value" name="ruleField_RuleOutput">@Model.RuleOutput</p>
</section>
<div class="header_grid header_grid_general">
    <h3 class="grid_subheadhead_detail">@Strings.RuleStatus</h3>
</div>
@{if (PermsChecker.HasPermission(Permission.EditRules))
    {
        using (Ajax.BeginForm("UpdateRuleEnabledState", "LocationRules", null,
        new AjaxOptions()
        {
            HttpMethod = "POST",
            OnBegin = "IoTApp.LocationRuleProperties.onBegin",
            OnFailure = "IoTApp.LocationRuleProperties.onFailure",
            OnSuccess = "IoTApp.LocationRuleProperties.onSuccess",
            OnComplete = "IoTApp.LocationRuleProperties.onComplete",
            LoadingElementId = "loadingElement"
        }, null))
        {

            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.RuleId)
            @Html.HiddenFor(m => m.RegionId)
            @Html.HiddenFor(m => m.EnabledState, new { @Value = !Model.EnabledState })
            <section class="grid_rules_details" id="ruleStatusGrid">
                <div class="grid_rules_details__rule_status_container">
                    @{if (Model.EnabledState)
                        {
                            <button type="submit" class="button_base rule_status_container___rule_status_button" id="rule_status_enabled">
                                @Strings.DisableRule
                            </button>
                        }
                        else
                        {
                            <button type="submit" class="button_base rule_status_container___rule_status_button" id="rule_status_disabled">
                                @Strings.EnableRule
                            </button>

                            if (PermsChecker.HasPermission(Permission.DeleteRules))
                            {
                                <button type="button" class="button_base rule_status_container___rule_status_button" id="remove_rule_button">
                                    @Strings.RemoveRuleButtonLabel
                                </button>
                            }
                        }
                    }
                </div>
            </section>
                            }
                        }
                        else
                        {
                            <section class="details_grid_general" id="ruleDetailsGrid">
                                <p class="grid_detail_value" name="ruleField_enabledState">
                                    @{if (Model.EnabledState)
                                        {
                                            @Strings.Enabled;
                                        }
                                        else
                                        {
                                            @Strings.Disabled;
                                        }
                                    }
                                </p>
                            </section>
                                        }
}
<div class="header_grid header_grid_general">
    <h3 class="grid_subheadhead_detail">@Strings.RegionInfo</h3>
    @if (PermsChecker.HasPermission(Permission.EditRules))
    {
        @Html.ActionLink(@Strings.Edit, "Edit", "LocationRules",
            new { regionId = Model.RegionId, ruleId = Model.RuleId },
            new { id = "edit_metadata_link", @class = "link_grid_subheadhead_detail" })
    }
</div>
<section class="details_grid_general" id="rulePropertiesGrid">
    <h4 class="grid_subhead_detail_label">@Strings.RegionId</h4>
    <p class=" grid_detail_value" name="ruleField_RegionId">@Model.RegionId</p>
    <h4 class="grid_subhead_detail_label">@Strings.RegionHeader</h4>
    <p class=" grid_detail_value" name="ruleField_Region">@Model.Region.Replace("#",",")</p>
    <h4 class="grid_subhead_detail_label">@Strings.RegionLatitude</h4>
    <p class=" grid_detail_value" name="ruleField_RegionLatitude">@Model.RegionLatitude</p>
    <h4 class="grid_subhead_detail_label">@Strings.RegionLongitude</h4>
    <p class=" grid_detail_value" name="ruleField_RegionLongitude">@Model.RegionLongitude</p>
</section>

